ctl <- rownames(sce) %in% Hs.schk
# define M matrix
P <- unique(sce$pressure)
S <- unique(sce$stress)
M <- NULL
for(i in P) {
for(j in S) {
mvec <- rep(0,ncol(sce))
mvec[sce$pressure==i & sce$stress==j] <- 1
M    <- cbind(M,mvec)
}
}
#mode(M) <- 'logical'
require(ruv,lib.loc=OLD_LIB)
out <- RUVIII(Y=t(log(assays(sce)$counts+1)),ctl=ctl,M=M,k=3,return.info = TRUE)
assays(sce,withDimnames=FALSE)$ruvIII <- t(out$newY)
sce <- runPCA(sce,exprs_values='ruvIII')
plotPCA(sce,colour_by='donor')
# shape=stress, colour=pressure
library(MASS)
pc=reducedDim(sce,type='PCA')
df.lda    <- data.frame(stress=sce$stress,PC1=pc[,1],PC2=pc[,2])
LDA.model <- lda(stress~PC1+PC2,data=df.lda)
#create test data
np = 500
x = seq(from = min(pc[,1]), to = max(pc[,1]), length.out = np)
y = seq(from = min(pc[,2]), to = max(pc[,2]), length.out = np)
df <- expand.grid(PC1 = x, PC2 = y)
df$classL <- as.numeric(predict(LDA.model, newdata = df)$class)
df$classLf <- ifelse(df$classL==1, 'LSS', 'HSS')
p1=plotPCA(sce,shape_by='stress',colour_by='pressure',point_size=5)
p1 + geom_contour(inherit.aes = FALSE,data=df, aes(x=PC1,y=PC2,z=classL), col='purple', lty=4)
# shape=pressure, colour=stress
library(MASS)
pc=reducedDim(sce,type='PCA')
df.lda    <- data.frame(pressure=sce$stress,PC1=pc[,1],PC2=pc[,2])
LDA.model <- lda(pressure~PC1+PC2,data=df.lda)
#create test data
np = 500
x = seq(from = min(pc[,1]), to = max(pc[,1]), length.out = np)
y = seq(from = min(pc[,2]), to = max(pc[,2]), length.out = np)
df <- expand.grid(PC1 = x, PC2 = y)
df$classL <- as.numeric(predict(LDA.model, newdata = df)$class)
p2=plotPCA(sce,shape_by='pressure',colour_by='stress',point_size=5)
p2 + geom_contour(inherit.aes = FALSE,data=df, aes(x=PC1,y=PC2,z=classL), col='purple', lty=4)
saveRDS(sce,here("analysis","sce_Sara.rds"))
# Chunk 7
require(edgeR)
design <- model.matrix(~stress*donor+pressure*donor,contrasts=list(donor='contr.sum'),data=colData(sce))
y <- DGEList(counts=assays(sce)$counts,group=paste0(sce$stress,'-',sce$pressure))
y <- calcNormFactors(y)
y <- estimateDisp(y,design)
fit <- glmFit(y,design)
# prepare the contrast matrix
contr.mat <- matrix(0,nrow=4,ncol=ncol(design))
colnames(contr.mat) <- colnames(design)
# overall LSS effect
contr.mat[1,c("stressLSS")] <- 1
# overall 1000kpa vs 30kpa effect
contr.mat[2,c("pressure1000kpa")] <- 1
# overall 1000kpa vs 200kpa effect
contr.mat[3,c("pressure200kpa")] <- -1
contr.mat[3,c("pressure1000kpa")] <- 1
# overall 200kpa vs 30kpa effect
contr.mat[4,c("pressure200kpa")] <- 1
rownames(contr.mat) <- c("overall LSS vs HSS effect","overall 1000kpa vs 30kpa effect",
"overall 1000kpa vs 200kpa effect","overall 200kpa vs 30kpa effect")
par(mfrow=c(nrow(contr.mat),2))
pval.treatment <- NULL
DE.table <- list()
for(m in 1:nrow(contr.mat)) {
results <- edgeR::glmLRT(fit, contrast=contr.mat[m,])
results <- edgeR::topTags(results,n=nrow(sce))
# add SE
results$table$SE <- abs(results$table$logFC)/sqrt(results$table$LR)
DE.table[[rownames(contr.mat)[m]]]<-results$table
pval.treatment <- cbind(pval.treatment,results$table$PValue)
hist(results$table$PValue,main=rownames(contr.mat)[m],ylim=c(0,6000),breaks=50)
plot(results$table$logFC,-log10(results$table$PValue),xlab='logFC',ylab='-log10
pval',cex=0.3,col=as.numeric(results$table$FDR<0.1)+1,main=rownames(contr.mat)[m])
write.csv(results$table,file=here("analysis",paste0('DEtable',rownames(contr.mat)[m],'.csv')), quote=FALSE)
}
colnames(pval.treatment) <- rownames(contr.mat)
par(mfrow=c(1,1))
nDEG <- function(x) {
out <- sum(x$FDR<0.1 & abs(x$logFC)>0.05,na.rm=T)
if(out==0)
out <- sum(x$PValue<0.05 & abs(x$logFC)>0.05,na.rm=T)
out
}
DEG.df <- data.frame(analysis=rownames(contr.mat),nDEG=sapply(DE.table,FUN=nDEG))
# Chunk 8
print(knitr::kable(DEG.df,
caption='Number of DEG for various overall analyses'))
# Chunk 9
library(limma)
# perform GO test
#library(KEGG.db)
GK <- getGeneKEGGLinks(species.KEGG = "hsa")
kegg.bigtable=getKEGGPathwayNames(species.KEGG='hsa')
for(m in 1:nrow(contr.mat)) {
upKEGG.tab <- dnKEGG.tab <- NULL
up.genes<- DE.table[[rownames(contr.mat)[m]]]$FDR<0.1 & DE.table[[rownames(contr.mat)[m]]]$logFC>0.05
dn.genes<- DE.table[[rownames(contr.mat)[m]]]$FDR<0.1 & DE.table[[rownames(contr.mat)[m]]]$logFC< -0.05
if(length(up.genes)>0) {
up.deg <- conv.tab[match(rownames(DE.table[[rownames(contr.mat)[m]]])[up.genes],conv.tab$SYMBOL),]$ENTREZID
upKEGG.pa  <- kegga(up.deg,species='Hs')
upKEGG.tab <- topKEGG(upKEGG.pa,n=1000)
upKEGG.tab$UpDown <- "Up"
upKEGG.tab <- subset(upKEGG.tab,P.DE<0.01)
}
if(length(dn.genes)>0) {
dn.deg <- conv.tab[match(rownames(DE.table[[rownames(contr.mat)[m]]])[dn.genes],conv.tab$SYMBOL),]$ENTREZID
dnKEGG.pa  <- kegga(dn.deg,species='Hs')
dnKEGG.tab <- topKEGG(dnKEGG.pa,n=1000)
dnKEGG.tab$UpDown <- "Down"
dnKEGG.tab <- subset(dnKEGG.tab,P.DE<0.01)
}
KEGG.tab <- rbind(upKEGG.tab,dnKEGG.tab)
KEGG.tab <- KEGG.tab[order(KEGG.tab$P.DE,decreasing=FALSE),]
if(nrow(KEGG.tab)>0) {
genenames <- NULL
for(i in 1:nrow(KEGG.tab)) {
geneset<- GK$GeneID[GK$PathwayID==rownames(KEGG.tab)[i]]
if(KEGG.tab$UpDown[i]=="Up")
de.genes <- up.deg
if(KEGG.tab$UpDown[i]=="Down")
de.genes <- dn.deg
genes  <- intersect(de.genes,geneset)
genes.symbol <- sort(conv.tab$SYMBOL[match(genes,conv.tab$ENTREZID)])
genenames <- c(genenames,paste(genes.symbol,collapse=","))
}
KEGG.tab$geneID <- genenames
KEGG.tab$Pathway<- kegg.bigtable$Description[match(rownames(KEGG.tab),paste0(kegg.bigtable$PathwayID))]
print(knitr::kable(KEGG.tab[KEGG.tab$P.DE<0.01,],
caption=paste0('Significant KEGG terms for ',rownames(contr.mat)[m])))
library(openxlsx)
write.xlsx(KEGG.tab,file=here("analysis",paste0(rownames(contr.mat)[m],'_upDnKEGG.xlsx')),overwrite = TRUE)
}
}
# Chunk 10
# perform GO test
library(GO.db,lib.loc=OLD_LIB)
for(m in 1:nrow(contr.mat)) {
upGO.tab <- dnGO.tab <- NULL
if(length(up.genes)>0) {
up.genes<- DE.table[[rownames(contr.mat)[m]]]$FDR<0.1 & DE.table[[rownames(contr.mat)[m]]]$logFC>0.05
up.deg <- conv.tab[match(rownames(DE.table[[rownames(contr.mat)[m]]])[up.genes],conv.tab$SYMBOL),]$ENTREZID
upGO.pa  <- goana(up.deg,species='Hs')
upGO.tab <- topGO(upGO.pa,n=1000,ontology='BP')
upGO.tab$UpDown <- "Up"
upGO.tab <- subset(upGO.tab,P.DE<0.01)
}
if(length(dn.genes)>0) {
dn.genes<- DE.table[[rownames(contr.mat)[m]]]$FDR<0.1 & DE.table[[rownames(contr.mat)[m]]]$logFC< -0.05
dn.deg <- conv.tab[match(rownames(DE.table[[rownames(contr.mat)[m]]])[dn.genes],conv.tab$SYMBOL),]$ENTREZID
dnGO.pa  <- goana(dn.deg,species='Hs')
dnGO.tab <- topGO(dnGO.pa,n=1000,ontology='BP')
dnGO.tab$UpDown <- "Down"
dnGO.tab <- subset(dnGO.tab,P.DE<0.01)
}
GO.tab <- rbind(upGO.tab,dnGO.tab)
# select only signalling pathways
GO.tab   <- GO.tab[grep('signaling',GO.tab$Term),]
GO.tab <- GO.tab[order(GO.tab$P.DE,decreasing=FALSE),]
if(sum(GO.tab$P.DE<0.01)>0) {
print(knitr::kable(GO.tab,
caption=paste0('Sig. signalling-related GO-BP terms for ',rownames(contr.mat)[m])))
write.xlsx(GO.tab,file=here("analysis",paste0(rownames(contr.mat)[m],'_upDnGOBP.xlsx')),overwrite = TRUE)
}
}
# Chunk 11
require(edgeR)
design <- model.matrix(~stress*donor+donor*pressure+stress*pressure,contrasts=list(donor='contr.sum'),data=colData(sce))
y <- DGEList(counts=assays(sce)$counts,group=paste0(sce$stress,'-',sce$pressure))
y <- calcNormFactors(y)
y <- estimateDisp(y,design)
fit <- glmFit(y,design)
# prepare the contrast matrix
contr.mat <- matrix(0,nrow=9,ncol=ncol(design))
colnames(contr.mat) <- colnames(design)
# 1000kpa vs 30kpa in LSS
contr.mat[1,c("pressure1000kpa","stressLSS:pressure1000kpa")] <- 1
# 1000kpa vs 30kpa in HSS
contr.mat[2,c("pressure1000kpa")] <- 1
# 1000kpa vs 200kpa in LSS
contr.mat[3,c("pressure200kpa","stressLSS:pressure200kpa")] <- -1
contr.mat[3,c("pressure1000kpa","stressLSS:pressure1000kpa")] <- 1
# 1000kpa vs 200kpa in HSS
contr.mat[4,c("pressure200kpa")] <- -1
contr.mat[4,c("pressure1000kpa")] <- 1
# 200kpa vs 30kpa in LSS
contr.mat[5,c("pressure200kpa","stressLSS:pressure200kpa")] <- 1
# 200kpa vs 30kpa in HSS
contr.mat[6,c("pressure200kpa")] <- 1
#LSS vs HSS in 30kpa
contr.mat[7,c("stressLSS")] <- 1
#LSS vs HSS in 200kpa
contr.mat[8,c("stressLSS","stressLSS:pressure200kpa")] <- 1
#LSS vs HSS in 1000kpa
contr.mat[9,c("stressLSS","stressLSS:pressure1000kpa")] <- 1
rownames(contr.mat) <- c("1000kpa vs 30kpa in LSS","1000kpa vs 30kpa in HSS","1000kpa vs 200kpa in LSS",
"1000kpa vs 200kpa in HSS","200kpa vs 30kpa in LSS","200kpa vs 30kpa in HSS",
"LSS vs HSS in 30kpa","LSS vs HSS in 200kpa","LSS vs HSS in 1000kpa")
par(mfrow=c(nrow(contr.mat),2))
pval.treatment <- NULL
DE.table <- list()
for(m in 1:nrow(contr.mat)) {
results <- edgeR::glmLRT(fit, contrast=contr.mat[m,])
results <- edgeR::topTags(results,n=nrow(sce))
# add SE
results$table$SE <- abs(results$table$logFC)/sqrt(results$table$LR)
DE.table[[rownames(contr.mat)[m]]]<-results$table
pval.treatment <- cbind(pval.treatment,results$table$PValue)
hist(results$table$PValue,main=rownames(contr.mat)[m],ylim=c(0,6000),breaks=50)
plot(results$table$logFC,-log10(results$table$PValue),xlab='logFC',ylab='-log10
pval',cex=0.3,col=as.numeric(results$table$FDR<0.1)+1,main=rownames(contr.mat)[m])
write.csv(results$table,file=here("analysis",paste0('DEtable',rownames(contr.mat)[m],'.csv')), quote=FALSE)
}
colnames(pval.treatment) <- rownames(contr.mat)
par(mfrow=c(1,1))
nDEG <- function(x) {
out <- sum(x$FDR<0.1 & abs(x$logFC)>0.05,na.rm=T)
if(out==0)
out <- sum(x$PValue<0.05 & abs(x$logFC)>0.05,na.rm=T)
out
}
DEG.df <- data.frame(analysis=rownames(contr.mat),nDEG=sapply(DE.table,FUN=nDEG))
# Chunk 12
print(knitr::kable(DEG.df,
caption='Number of DEG for various specific analyses'))
# Chunk 13: heatmap
library(ComplexHeatmap)
library(circlize)
data <- assays(sce)$logcounts
data.tmp <- data
mean.donorA <- rowMeans(data.tmp[,grep('A',cov$donor)])
mean.donorB <- rowMeans(data.tmp[,grep('B',cov$donor)])
mean.donorC <- rowMeans(data.tmp[,grep('C',cov$donor)])
mean.donorD <- rowMeans(data.tmp[,grep('D',cov$donor)])
data.tmp[,grep('A',cov$donor)]<-data.tmp[,grep('A',cov$donor)]-mean.donorA
data.tmp[,grep('B',cov$donor)]<-data.tmp[,grep('B',cov$donor)]-mean.donorB
data.tmp[,grep('C',cov$donor)]<-data.tmp[,grep('C',cov$donor)]-mean.donorC
data.tmp[,grep('D',cov$donor)]<-data.tmp[,grep('D',cov$donor)]-mean.donorD
SD   <- apply(data.tmp,1,sd)
ref.table <- DE.table[[2]][1:500,]
ref.table <- ref.table[order(ref.table$logFC,decreasing=FALSE),]
col_fun = colorRamp2(c(-2, 0, 2), c("blue", "white", "red"))
# 200 vs 30 kpa, LSS
data.tmp = subset(data,select=cov$pressure!='1000kpa' & cov$stress=='LSS')
cov.tmp = subset(cov,pressure!='1000kpa' & stress=='LSS')
idx <- c(grep('30kpa',cov.tmp$pressure),grep('200kpa',cov.tmp$pressure))
data.tmp= data.tmp[,idx]
cov.tmp = cov.tmp[idx,]
cov.tmp$pressure <- factor(cov.tmp$pressure,levels=c('30kpa','200kpa'))
mean.donorA <- rowMeans(data.tmp[,grep('A',cov.tmp$donor)])
mean.donorB <- rowMeans(data.tmp[,grep('B',cov.tmp$donor)])
mean.donorC <- rowMeans(data.tmp[,grep('C',cov.tmp$donor)])
mean.donorD <- rowMeans(data.tmp[,grep('D',cov.tmp$donor)])
data.tmp[,grep('A',cov.tmp$donor)]<-data.tmp[,grep('A',cov.tmp$donor)]-mean.donorA
data.tmp[,grep('B',cov.tmp$donor)]<-data.tmp[,grep('B',cov.tmp$donor)]-mean.donorB
data.tmp[,grep('C',cov.tmp$donor)]<-data.tmp[,grep('C',cov.tmp$donor)]-mean.donorC
data.tmp[,grep('D',cov.tmp$donor)]<-data.tmp[,grep('D',cov.tmp$donor)]-mean.donorD
data.tmp <- sweep(data.tmp,1,SD,'/')
data.tmp <- data.tmp[rownames(ref.table),]
p1<- ComplexHeatmap::Heatmap(data.tmp,col=col_fun,cluster_rows = FALSE,cluster_columns = FALSE,column_split = cov.tmp$pressure,show_row_dend=FALSE,show_row_names = FALSE,show_column_names = FALSE,show_heatmap_legend = FALSE)
# 1000 vs 30 kpa, LSS
data.tmp = subset(data,select=cov$pressure!='200kpa' & cov$stress=='LSS')
cov.tmp = subset(cov,pressure!='200kpa' & stress=='LSS')
idx <- c(grep('30kpa',cov.tmp$pressure),grep('1000kpa',cov.tmp$pressure))
data.tmp= data.tmp[,idx]
cov.tmp = cov.tmp[idx,]
cov.tmp$pressure <- factor(cov.tmp$pressure,levels=c('30kpa','1000kpa'))
mean.donorA <- rowMeans(data.tmp[,grep('A',cov.tmp$donor)])
mean.donorB <- rowMeans(data.tmp[,grep('B',cov.tmp$donor)])
mean.donorC <- rowMeans(data.tmp[,grep('C',cov.tmp$donor)])
mean.donorD <- rowMeans(data.tmp[,grep('D',cov.tmp$donor)])
data.tmp[,grep('A',cov.tmp$donor)]<-data.tmp[,grep('A',cov.tmp$donor)]-mean.donorA
data.tmp[,grep('B',cov.tmp$donor)]<-data.tmp[,grep('B',cov.tmp$donor)]-mean.donorB
data.tmp[,grep('C',cov.tmp$donor)]<-data.tmp[,grep('C',cov.tmp$donor)]-mean.donorC
data.tmp[,grep('D',cov.tmp$donor)]<-data.tmp[,grep('D',cov.tmp$donor)]-mean.donorD
data.tmp <- sweep(data.tmp,1,SD,'/')
data.tmp <- data.tmp[rownames(ref.table),]
p2<- ComplexHeatmap::Heatmap(data.tmp,col=col_fun,cluster_rows = FALSE,cluster_columns = FALSE,column_split = cov.tmp$pressure,show_row_dend=FALSE,show_row_names = FALSE,show_column_names = FALSE,show_heatmap_legend = FALSE)
# 200 vs 30 kpa, HSS
data.tmp = subset(data,select=cov$pressure!='1000kpa' & cov$stress=='HSS')
cov.tmp = subset(cov,pressure!='1000kpa' & stress=='HSS')
idx <- c(grep('30kpa',cov.tmp$pressure),grep('200kpa',cov.tmp$pressure))
data.tmp= data.tmp[,idx]
cov.tmp = cov.tmp[idx,]
cov.tmp$pressure <- factor(cov.tmp$pressure,levels=c('30kpa','200kpa'))
mean.donorA <- rowMeans(data.tmp[,grep('A',cov.tmp$donor)])
mean.donorB <- rowMeans(data.tmp[,grep('B',cov.tmp$donor)])
mean.donorC <- rowMeans(data.tmp[,grep('C',cov.tmp$donor)])
mean.donorD <- rowMeans(data.tmp[,grep('D',cov.tmp$donor)])
data.tmp[,grep('A',cov.tmp$donor)]<-data.tmp[,grep('A',cov.tmp$donor)]-mean.donorA
data.tmp[,grep('B',cov.tmp$donor)]<-data.tmp[,grep('B',cov.tmp$donor)]-mean.donorB
data.tmp[,grep('C',cov.tmp$donor)]<-data.tmp[,grep('C',cov.tmp$donor)]-mean.donorC
data.tmp[,grep('D',cov.tmp$donor)]<-data.tmp[,grep('D',cov.tmp$donor)]-mean.donorD
data.tmp <- sweep(data.tmp,1,SD,'/')
data.tmp <- data.tmp[rownames(ref.table),]
p3<- ComplexHeatmap::Heatmap(data.tmp,col=col_fun,cluster_rows = FALSE,cluster_columns = FALSE,column_split = cov.tmp$pressure,show_row_dend=FALSE,show_row_names = FALSE,show_column_names = FALSE,show_heatmap_legend = FALSE)
# 1000 vs 30 kpa, HSS
data.tmp = subset(data,select=cov$pressure!='200kpa' & cov$stress=='HSS')
cov.tmp = subset(cov,pressure!='200kpa' & stress=='HSS')
idx <- c(grep('30kpa',cov.tmp$pressure),grep('1000kpa',cov.tmp$pressure))
data.tmp= data.tmp[,idx]
cov.tmp = cov.tmp[idx,]
cov.tmp$pressure <- factor(cov.tmp$pressure,levels=c('30kpa','1000kpa'))
mean.donorA <- rowMeans(data.tmp[,grep('A',cov.tmp$donor)])
mean.donorB <- rowMeans(data.tmp[,grep('B',cov.tmp$donor)])
mean.donorC <- rowMeans(data.tmp[,grep('C',cov.tmp$donor)])
mean.donorD <- rowMeans(data.tmp[,grep('D',cov.tmp$donor)])
data.tmp[,grep('A',cov.tmp$donor)]<-data.tmp[,grep('A',cov.tmp$donor)]-mean.donorA
data.tmp[,grep('B',cov.tmp$donor)]<-data.tmp[,grep('B',cov.tmp$donor)]-mean.donorB
data.tmp[,grep('C',cov.tmp$donor)]<-data.tmp[,grep('C',cov.tmp$donor)]-mean.donorC
data.tmp[,grep('D',cov.tmp$donor)]<-data.tmp[,grep('D',cov.tmp$donor)]-mean.donorD
data.tmp <- sweep(data.tmp,1,SD,'/')
data.tmp <- data.tmp[rownames(ref.table),]
p4<- ComplexHeatmap::Heatmap(data.tmp,col=col_fun,cluster_rows = FALSE,cluster_columns = FALSE,column_split = cov.tmp$pressure,show_row_dend=FALSE,show_row_names = FALSE,show_column_names = FALSE,show_heatmap_legend = FALSE)
library(circlize,lib.loc=OLD_LIB)
col_fun = colorRamp2(c(-2, 0, 2), c("blue", "white", "red"))
lgd.p4  <- Legend(title="z-score",col_fun=col_fun)
library(ggpubr)
ggarrange(grid.grabExpr(draw(p1)),grid.grabExpr(draw(p2)),
grid.grabExpr(draw(p3)),
grid.grabExpr(draw(p4)),
grid.grabExpr(draw(lgd.p4,x=unit(0.7,"npc"),y=unit(0.4,"npc"))),
labels = LETTERS[1:4],ncol=5,nrow=1,widths=c(5,5,5,5,1.5))
# Chunk 14: heatmap2
library(ComplexHeatmap,lib.loc=OLD_LIB)
data <- assays(sce)$logcounts
# HSS
data.tmp = subset(data,select=cov$stress=='HSS')
cov.tmp = subset(cov,stress=='HSS')
idx <- c(grep('30kpa',cov.tmp$pressure),grep('200kpa',cov.tmp$pressure),
grep('1000kpa',cov.tmp$pressure))
DE.table1 <- DE.table[[6]][1:3000,]
DE.table2 <- DE.table[[2]][1:3000,]
genes <- intersect(rownames(DE.table1),rownames(DE.table2))
DE.table1 <- DE.table1[genes,]
DE.table2 <- DE.table2[genes,]
LR.stat <- DE.table1$LR + DE.table2$LR
names(LR.stat) <- rownames(DE.table1)
LR.stat <- sort(LR.stat,decreasing=TRUE)
data.tmp= data.tmp[,idx]
cov.tmp = cov.tmp[idx,]
cov.tmp$pressure <- factor(cov.tmp$pressure,levels=c('30kpa','200kpa','1000kpa'))
mean.donorA <- rowMeans(data.tmp[,grep('A',cov.tmp$donor)])
mean.donorB <- rowMeans(data.tmp[,grep('B',cov.tmp$donor)])
mean.donorC <- rowMeans(data.tmp[,grep('C',cov.tmp$donor)])
mean.donorD <- rowMeans(data.tmp[,grep('D',cov.tmp$donor)])
data.tmp[,grep('A',cov.tmp$donor)]<-data.tmp[,grep('A',cov.tmp$donor)]-mean.donorA
data.tmp[,grep('B',cov.tmp$donor)]<-data.tmp[,grep('B',cov.tmp$donor)]-mean.donorB
data.tmp[,grep('C',cov.tmp$donor)]<-data.tmp[,grep('C',cov.tmp$donor)]-mean.donorC
data.tmp[,grep('D',cov.tmp$donor)]<-data.tmp[,grep('D',cov.tmp$donor)]-mean.donorD
data.tmp <- sweep(data.tmp,1,SD,'/')
data.tmp <- data.tmp[names(LR.stat)[1:500],]
p1<- ComplexHeatmap::Heatmap(data.tmp,col=col_fun,cluster_rows = TRUE,cluster_columns = FALSE, column_split=cov.tmp$pressure,show_row_dend=FALSE,show_row_names = FALSE,show_column_names = FALSE,show_heatmap_legend = FALSE)
# LSS
data.tmp = subset(data,select=cov$stress=='LSS')
cov.tmp = subset(cov,stress=='LSS')
idx <- c(grep('30kpa',cov.tmp$pressure),grep('200kpa',cov.tmp$pressure),
grep('1000kpa',cov.tmp$pressure))
DE.table1 <- DE.table[[5]][1:3000,]
DE.table2 <- DE.table[[1]][1:3000,]
genes <- intersect(rownames(DE.table1),rownames(DE.table2))
DE.table1 <- DE.table1[genes,]
DE.table2 <- DE.table2[genes,]
#LR.stat <- DE.table1$LR + DE.table2$LR
#names(LR.stat) <- rownames(DE.table1)
#LR.stat <- sort(LR.stat,decreasing=TRUE)
data.tmp= data.tmp[,idx]
cov.tmp = cov.tmp[idx,]
cov.tmp$pressure <- factor(cov.tmp$pressure,levels=c('30kpa','200kpa','1000kpa'))
mean.donorA <- rowMeans(data.tmp[,grep('A',cov.tmp$donor)])
mean.donorB <- rowMeans(data.tmp[,grep('B',cov.tmp$donor)])
mean.donorC <- rowMeans(data.tmp[,grep('C',cov.tmp$donor)])
mean.donorD <- rowMeans(data.tmp[,grep('D',cov.tmp$donor)])
data.tmp[,grep('A',cov.tmp$donor)]<-data.tmp[,grep('A',cov.tmp$donor)]-mean.donorA
data.tmp[,grep('B',cov.tmp$donor)]<-data.tmp[,grep('B',cov.tmp$donor)]-mean.donorB
data.tmp[,grep('C',cov.tmp$donor)]<-data.tmp[,grep('C',cov.tmp$donor)]-mean.donorC
data.tmp[,grep('D',cov.tmp$donor)]<-data.tmp[,grep('D',cov.tmp$donor)]-mean.donorD
data.tmp <- sweep(data.tmp,1,SD,'/')
data.tmp <- data.tmp[names(LR.stat)[1:500],]
p2<- ComplexHeatmap::Heatmap(data.tmp,col=col_fun,cluster_rows = TRUE,cluster_columns = FALSE,column_split = cov.tmp$pressure,show_row_dend=FALSE,show_row_names = FALSE,show_column_names = FALSE,show_heatmap_legend = FALSE)
library(circlize,lib.loc=OLD_LIB)
col_fun = colorRamp2(c(-2, 0, 2), c("blue", "white", "red"))
lgd.p2  <- Legend(title="z-score",col_fun=col_fun)
library(ggpubr)
ggarrange(grid.grabExpr(draw(p2)),grid.grabExpr(draw(p1)),
grid.grabExpr(draw(lgd.p2,x=unit(0.7,"npc"),y=unit(0.4,"npc"))),
labels = LETTERS[1:2],ncol=3,nrow=1,widths=c(10,10,2.5))
# Chunk 15: chemokine
library(ComplexHeatmap,lib.loc=OLD_LIB)
data <- assays(sce)$logcounts
# re-order samples: stiffness nested within pressure
idx <- c(which(cov$pressure=='30kpa' & cov$stress=='LSS'),
which(cov$pressure=='30kpa' & cov$stress=='HSS'),
which(cov$pressure=='200kpa' & cov$stress=='LSS'),
which(cov$pressure=='200kpa' & cov$stress=='HSS'),
which(cov$pressure=='1000kpa' & cov$stress=='LSS'),
which(cov$pressure=='1000kpa' & cov$stress=='HSS')
)
data.tmp  <- data[,idx]
cov.tmp   <- cov[idx,]
DE.table1 <- DE.table[[7]][1:3000,]
DE.table2 <- DE.table[[8]][1:3000,]
DE.table3 <- DE.table[[9]][1:3000,]
genes <- intersect(rownames(DE.table1),rownames(DE.table2))
genes <- intersect(genes,rownames(DE.table3))
DE.table1 <- DE.table1[genes,]
DE.table2 <- DE.table2[genes,]
DE.table3 <- DE.table3[genes,]
LR.stat <- DE.table1$LR + DE.table2$LR + DE.table3$LR
names(LR.stat) <- rownames(DE.table1)
LR.stat <- sort(LR.stat,decreasing=TRUE)
cov.tmp$pressure <- factor(cov.tmp$pressure,levels=c('30kpa','200kpa','1000kpa'))
# center for 30kpa
mean.donorA <- rowMeans(data.tmp[,which(cov.tmp$donor=='A' & cov.tmp$pressure=='30kpa')])
mean.donorB <- rowMeans(data.tmp[,which(cov.tmp$donor=='B' & cov.tmp$pressure=='30kpa')])
mean.donorC <- rowMeans(data.tmp[,which(cov.tmp$donor=='C' & cov.tmp$pressure=='30kpa')])
mean.donorD <- rowMeans(data.tmp[,which(cov.tmp$donor=='D' & cov.tmp$pressure=='30kpa')])
data.tmp[,which(cov.tmp$donor=='A' & cov.tmp$pressure=='30kpa')]<-data.tmp[,which(cov.tmp$donor=='A' & cov.tmp$pressure=='30kpa')]-mean.donorA
data.tmp[,which(cov.tmp$donor=='B' & cov.tmp$pressure=='30kpa')]<-data.tmp[,which(cov.tmp$donor=='B' & cov.tmp$pressure=='30kpa')]-mean.donorB
data.tmp[,which(cov.tmp$donor=='C' & cov.tmp$pressure=='30kpa')]<-data.tmp[,which(cov.tmp$donor=='C' & cov.tmp$pressure=='30kpa')]-mean.donorC
data.tmp[,which(cov.tmp$donor=='D' & cov.tmp$pressure=='30kpa')]<-data.tmp[,which(cov.tmp$donor=='D' & cov.tmp$pressure=='30kpa')]-mean.donorD
# center for 200kpa
mean.donorA <- rowMeans(data.tmp[,which(cov.tmp$donor=='A' & cov.tmp$pressure=='200kpa')])
mean.donorB <- rowMeans(data.tmp[,which(cov.tmp$donor=='B' & cov.tmp$pressure=='200kpa')])
mean.donorC <- rowMeans(data.tmp[,which(cov.tmp$donor=='C' & cov.tmp$pressure=='200kpa')])
mean.donorD <- rowMeans(data.tmp[,which(cov.tmp$donor=='D' & cov.tmp$pressure=='200kpa')])
data.tmp[,which(cov.tmp$donor=='A' & cov.tmp$pressure=='200kpa')]<-data.tmp[,which(cov.tmp$donor=='A' & cov.tmp$pressure=='200kpa')]-mean.donorA
data.tmp[,which(cov.tmp$donor=='B' & cov.tmp$pressure=='200kpa')]<-data.tmp[,which(cov.tmp$donor=='B' & cov.tmp$pressure=='200kpa')]-mean.donorB
data.tmp[,which(cov.tmp$donor=='C' & cov.tmp$pressure=='200kpa')]<-data.tmp[,which(cov.tmp$donor=='C' & cov.tmp$pressure=='200kpa')]-mean.donorC
data.tmp[,which(cov.tmp$donor=='D' & cov.tmp$pressure=='200kpa')]<-data.tmp[,which(cov.tmp$donor=='D' & cov.tmp$pressure=='200kpa')]-mean.donorD
# center for 1000kpa
mean.donorA <- rowMeans(data.tmp[,which(cov.tmp$donor=='A' & cov.tmp$pressure=='1000kpa')])
mean.donorB <- rowMeans(data.tmp[,which(cov.tmp$donor=='B' & cov.tmp$pressure=='1000kpa')])
mean.donorC <- rowMeans(data.tmp[,which(cov.tmp$donor=='C' & cov.tmp$pressure=='1000kpa')])
mean.donorD <- rowMeans(data.tmp[,which(cov.tmp$donor=='D' & cov.tmp$pressure=='1000kpa')])
data.tmp[,which(cov.tmp$donor=='A' & cov.tmp$pressure=='1000kpa')]<-data.tmp[,which(cov.tmp$donor=='A' & cov.tmp$pressure=='1000kpa')]-mean.donorA
data.tmp[,which(cov.tmp$donor=='B' & cov.tmp$pressure=='1000kpa')]<-data.tmp[,which(cov.tmp$donor=='B' & cov.tmp$pressure=='1000kpa')]-mean.donorB
data.tmp[,which(cov.tmp$donor=='C' & cov.tmp$pressure=='1000kpa')]<-data.tmp[,which(cov.tmp$donor=='C' & cov.tmp$pressure=='1000kpa')]-mean.donorC
data.tmp[,which(cov.tmp$donor=='D' & cov.tmp$pressure=='1000kpa')]<-data.tmp[,which(cov.tmp$donor=='D' & cov.tmp$pressure=='1000kpa')]-mean.donorD
data.tmp <- sweep(data.tmp,1,SD,'/')
# select genes
geneset<- unique(GK$GeneID[GK$PathwayID=="hsa04750"])
geneset.sym  <- conv.tab$SYMBOL[match(geneset,conv.tab$ENTREZID)]
data.tmp <- data.tmp[rownames(data.tmp) %in% geneset.sym,]
logp.LR<- pchisq(LR.stat,df=3,lower.tail=FALSE)
names(logp.LR) <- names(LR.stat)
logp.LR <- logp.LR[logp.LR<0.05]
p1<- ComplexHeatmap::Heatmap(data.tmp[names(logp.LR),],col=col_fun,cluster_rows = TRUE,cluster_columns = FALSE, column_split=cov.tmp$pressure,show_row_dend=FALSE,show_row_names = TRUE,show_column_names = FALSE,show_heatmap_legend = FALSE,row_names_gp = grid::gpar(fontsize = 8))
library(circlize,lib.loc=OLD_LIB)
col_fun = colorRamp2(c(-2, 0, 2), c("blue", "white", "red"))
lgd.p2  <- Legend(title="z-score",col_fun=col_fun)
library(ggpubr)
ggarrange(grid.grabExpr(draw(p1)),
grid.grabExpr(draw(lgd.p2,x=unit(0.7,"npc"),y=unit(0.4,"npc"))),
labels = LETTERS[1],ncol=2,nrow=1,widths=c(20,2.5))
setwd('/home/asalim/poisRUV/paper/analysis/293tJur')
sce <- readRDS(file='293tJur_Qced_annotated.rds')
sce <- subset(sce,rowMeans(assays(sce)$counts)>0.1)
data.obs <- DelayedArray(assays(sce)$counts)
batch <- as.numeric(factor(sce$batch))
# define M matrix
ct<- unique(sce$new.lables)
M <- matrix(0,ncol(assays(sce)$counts),length(unique(sce$new.lables)))
for(i in 1:length(unique(sce$new.lables)))
M[sce$new.lables==ct[i],i] <- 1
mode(M) <- 'logical'
nW  <- c(1,2,3,5,7,10,15)
library(SingleCellExperiment)
library(scater)
library(scMerge)
library(DelayedArray)
# read functions
setwd('/home/asalim/poisRUV/paper/analysis/293tJur')
sce <- readRDS(file='293tJur_Qced_annotated.rds')
sce <- subset(sce,rowMeans(assays(sce)$counts)>0.1)
data.obs <- DelayedArray(assays(sce)$counts)
batch <- as.numeric(factor(sce$batch))
# define M matrix
ct<- unique(sce$new.lables)
M <- matrix(0,ncol(assays(sce)$counts),length(unique(sce$new.lables)))
for(i in 1:length(unique(sce$new.lables)))
M[sce$new.lables==ct[i],i] <- 1
mode(M) <- 'logical'
nW  <- c(1,2,3,5,7,10,15)
setwd('/home/asalim/poisRUV/github/ruvIIInb')
apply(M,2,sum)
dim(M)
M[sample(nrow(M),size=round(0.9*nrow(M))),]<-0
apply(M,2,sum)
devtools::document()
library(Seurat)
.libPaths()
library(Seurat,lib.loc=)"/home/asalim/R/x86_64-pc-linux-gnu-library/4.1")
library(Seurat,lib.loc="/home/asalim/R/x86_64-pc-linux-gnu-library/4.1")
devtools::document()
library(SingleR,lib.loc="/home/asalim/R/x86_64-pc-linux-gnu-library/4.1")
devtools::document()
devtools::document()
?usethis::use_data
cellline.M <- M
cellline_M <- M
cellline_sce <- sce
usethis::use_data(cellline_M)
usethis::use_data(cellline_sce)
colnames(colData(sce))
.libPaths()
